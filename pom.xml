<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.smile</groupId>
    <artifactId>smile</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>smile-auth</module>
        <module>smile-basic</module>
        <module>smile-gateway</module>
        <module>smile-auth-resource</module>
        <module>smile-sys</module>
        <module>smile-api</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>
        <spring-cloud-alibaba.version>2.2.6.RELEASE</spring-cloud-alibaba.version>
        <hutool.version>5.8.0</hutool.version>
        <mybatis-plus.version>3.5.1</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.2</mybatis-plus-generator.version>
        <velocity.version>2.3</velocity.version>
        <knife4j-boot-starter.version>2.0.9</knife4j-boot-starter.version>
    </properties>


    <dependencies>


        <!-- spring boot 监控依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <!-- jasypt加密 -->
        <!--<dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>${jasypt.version}</version>
        </dependency>-->
    </dependencies>


    <!-- 引入spring cloud的依赖，不能少，主要用来管理Spring Cloud生态各组件的版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- https://github.com/alibaba/spring-cloud-alibaba/wiki -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 整合knife4j依赖底层也是swagger-ui -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j-boot-starter.version}</version>
            </dependency>

            <!-- mybatis-plus starter -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- mybatis-plus-generator for code -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-generator.version}</version>
            </dependency>

            <!--velocity模板-->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>


        </dependencies>

    </dependencyManagement>

    <profiles>

        <profile>
            <id>dev</id>
            <activation>
                <!--默认激活-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>dev</spring.profiles.active>
                <nacosNamespace>764f9c7a-1874-4c91-985b-0678754a8208</nacosNamespace>
                <nacosServer>192.168.56.10:8848</nacosServer>
            </properties>
        </profile>

        <profile>
            <id>local</id>
            <properties>
                <spring.profiles.active>local</spring.profiles.active>
            </properties>
        </profile>

        <profile>
            <id>ddev</id>
            <properties>
                <spring.profiles.active>ddev</spring.profiles.active>
                <nacosNamespace>74a54390-4ff2-4f7e-bc44-956281fe4866</nacosNamespace>
                <nacosServer>nacos1.4.2:8848</nacosServer>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
        </profile>

    </profiles>



    <!-- 配合profiles中配置的环境文件使用，不配置项目启动报错 主要是filtering作用 -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 处理文件时替换文件中的变量 -->
                <filtering>true</filtering>
                <!-- 打包时所包含得文件 -->
                <includes>
                    <include>bootstrap.yml</include>
                    <include>bootstrap-${spring.profiles.active}.yml</include>
                </includes>
            </resource>
            <!--<resource>
               <directory>src/main/resources</directory>
               <excludes>
                   &lt;!&ndash; 打包时排除文件&ndash;&gt;
                   <exclude>bootstrap.yml</exclude>
                   <exclude>bootstrap-dev.yml</exclude>
                   <exclude>bootstrap-ddev.yml</exclude>
                   <exclude>bootstrap-local.yml</exclude>
                   <exclude>Dockerfile</exclude>
                   <exclude>jwt.jks</exclude>
               </excludes>
           </resource>-->

            <resource>
                <directory>src/main/resources</directory>
                <!-- 打包时所包含得文件,该文件不能被替换 -->
                <includes>
                    <include>jwt.jks</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- 上述filtering替换有时候可能有问题
             maven在替换变量的时候，默认${]和@@表达式均可替换，如果我们在spring 的xml配置文件中使用${}
            也会被maven替换掉，为了避免该问题，我们可以参考spring boot的parent中的xml进行配置
            重点是delimiter的配置，该配置主要配置变量的分隔符，我们配置为@，那么它就不会对${}产生作用了，具体说明可以
            参考maven的官方文档 maven delimiters https://maven.apache.org/plugins/maven-resources-plugin/resources-mojo.html#delimiters-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <!-- 部署打包找不到主类错误 No main manifest attribute, in XXX.jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.7.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>